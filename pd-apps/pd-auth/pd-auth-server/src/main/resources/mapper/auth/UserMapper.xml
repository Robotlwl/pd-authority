<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pd.auth.mapper.auth.UserMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.pd.auth.entity.auth.User">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="create_user" jdbcType="BIGINT" property="createUser"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_user" jdbcType="BIGINT" property="updateUser"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="account" jdbcType="VARCHAR" property="account"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="org_id" jdbcType="BIGINT" property="orgId"/>
        <result column="station_id" jdbcType="BIGINT" property="stationId"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="status" jdbcType="BIT" property="status"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
        <result column="work_describe" jdbcType="VARCHAR" property="workDescribe"/>
        <result column="password_error_last_time" jdbcType="TIMESTAMP" property="passwordErrorLastTime"/>
        <result column="password_error_num" jdbcType="INTEGER" property="passwordErrorNum"/>
        <result column="password_expire_time" jdbcType="TIMESTAMP" property="passwordExpireTime"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, create_user, create_time, update_user, update_time,
        account, name, org_id, station_id, email, mobile, sex, status, avatar, work_describe, password_error_last_time, password_error_num, password_expire_time, password, last_login_time
    </sql>

    <select id="findUserByRoleId" resultMap="BaseResultMap" parameterType="map">
        SELECT u.id as id, account, name, mobile, sex
        FROM pd_auth_user u INNER JOIN pd_auth_user_role ur on u.id = ur.user_id
        where ur.role_id = #{roleId, jdbcType=BIGINT}
        <if test="keyword != null and keyword != ''">
            and (u.account like #{keyword, typeHandler=fullLike} or u.`name` like #{keyword, typeHandler=fullLike})
        </if>
    </select>

    <update id="incrPasswordErrorNumById">
        update pd_auth_user set password_error_num = password_error_num + 1, password_error_last_time = SYSDATE()
        where id = #{id, jdbcType=BIGINT}
    </update>

    <update id="resetPassErrorNum">
        update pd_auth_user set password_error_num = 0, password_error_last_time = SYSDATE()
        where id = #{id, jdbcType=BIGINT}
    </update>

    <update id="updateLastLoginTime">
        update pd_auth_user set last_login_time = #{now, jdbcType=TIMESTAMP}
        where account = #{account, jdbcType=BIGINT}
    </update>

    <select id="findPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM pd_auth_user s ${ew.customSqlSegment}
    </select>

</mapper>
